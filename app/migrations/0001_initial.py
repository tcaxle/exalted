# Generated by Django 3.0.5 on 2020-04-13 00:12

import app.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='characterBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', app.models.NameField(max_length=100, verbose_name='Name')),
                ('player', models.CharField(blank=True, max_length=100, verbose_name='Player')),
                ('concept', models.TextField(blank=True)),
                ('strength', app.models.DotField(default=0, verbose_name='Strength')),
                ('dexterity', app.models.DotField(default=0, verbose_name='Dexterity')),
                ('stamina', app.models.DotField(default=0, verbose_name='Stamina')),
                ('charisma', app.models.DotField(default=0, verbose_name='Charisma')),
                ('manipulation', app.models.DotField(default=0, verbose_name='Manipulation')),
                ('appearance', app.models.DotField(default=0, verbose_name='Apperance')),
                ('perception', app.models.DotField(default=0, verbose_name='Perception')),
                ('intelligence', app.models.DotField(default=0, verbose_name='Intelligence')),
                ('wits', app.models.DotField(default=0, verbose_name='Wits')),
                ('archery', app.models.DotField(default=0, verbose_name='Archery')),
                ('athletics', app.models.DotField(default=0, verbose_name='Athletics')),
                ('awareness', app.models.DotField(default=0, verbose_name='Awareness')),
                ('brawl', app.models.DotField(default=0, verbose_name='Brawl')),
                ('bureaucracy', app.models.DotField(default=0, verbose_name='Bureaucracy')),
                ('craft', app.models.DotField(default=0, verbose_name='Craft')),
                ('dodge', app.models.DotField(default=0, verbose_name='Dodge')),
                ('integrity', app.models.DotField(default=0, verbose_name='Integrity')),
                ('investigation', app.models.DotField(default=0, verbose_name='Investigation')),
                ('larceny', app.models.DotField(default=0, verbose_name='Larceny')),
                ('linguistics', app.models.DotField(default=0, verbose_name='Linguistics')),
                ('lore', app.models.DotField(default=0, verbose_name='Lore')),
                ('martialArts', app.models.DotField(default=0, verbose_name='MartialArts')),
                ('medicine', app.models.DotField(default=0, verbose_name='Medicine')),
                ('melee', app.models.DotField(default=0, verbose_name='Melee')),
                ('occult', app.models.DotField(default=0, verbose_name='Occult')),
                ('performance', app.models.DotField(default=0, verbose_name='Performance')),
                ('presence', app.models.DotField(default=0, verbose_name='Presence')),
                ('resistance', app.models.DotField(default=0, verbose_name='Resistance')),
                ('ride', app.models.DotField(default=0, verbose_name='Ride')),
                ('sail', app.models.DotField(default=0, verbose_name='Sail')),
                ('socialize', app.models.DotField(default=0, verbose_name='Socialize')),
                ('stealth', app.models.DotField(default=0, verbose_name='Stealth')),
                ('survival', app.models.DotField(default=0, verbose_name='Survival')),
                ('thrown', app.models.DotField(default=0, verbose_name='Thrown')),
                ('war', app.models.DotField(default=0, verbose_name='War')),
                ('willpowerMax', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Maximum Willpower')),
                ('willpower', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Current Willpower')),
                ('experienceTotal', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Total Experience')),
                ('experience', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Current Experience')),
                ('essence', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Essence')),
                ('health0', app.models.NamedIntegerField(default=0, help_text=None, verbose_name="'-0' Health Levels")),
                ('health1', app.models.NamedIntegerField(default=0, help_text=None, verbose_name="'-1' Health Levels")),
                ('health2', app.models.NamedIntegerField(default=0, help_text=None, verbose_name="'-2' Health Levels")),
                ('healthIndex', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Health Track Index')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.characterbase_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='effectBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', app.models.NameField(max_length=100, verbose_name='Name')),
                ('description', app.models.DescriptionField(blank=True, max_length=1000, verbose_name='Description')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='intimacyBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', app.models.DescriptionField(blank=True, max_length=1000, verbose_name='Description')),
                ('intensity', app.models.SingleChoiceField(blank=True, choices=[('Minor', 'Minor'), ('Major', 'Major'), ('Defining', 'Defining')], max_length=100, verbose_name='Intensity')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.intimacybase_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='itemBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', app.models.NameField(max_length=100, verbose_name='Name')),
                ('description', app.models.DescriptionField(blank=True, max_length=1000, verbose_name='Description')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.itembase_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='modifierBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Modifier Value')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.modifierbase_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ownershipBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('active', app.models.NamedBooleanField(default=False, verbose_name='Active/Equipped?')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.ownershipbase_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='characterExaltBase',
            fields=[
                ('characterbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.characterBase')),
                ('anima', models.CharField(max_length=100, verbose_name='Anima')),
                ('motesPersonalMax', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Maximum Personal Motes')),
                ('motesPersonal', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Current Personal Motes')),
                ('motesPeripheralMax', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Maximum Peripheral Motes')),
                ('motesPeripheral', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Current Peripheral Motes')),
                ('limitTrigger', models.TextField(blank='False', max_length=1000, verbose_name='Limit Trigger')),
                ('limitBreak', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Limit Break')),
                ('experienceExaltedTotal', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Total Exalted Experience')),
                ('experienceExalted', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Current Exalted Experience')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.characterbase',),
        ),
        migrations.CreateModel(
            name='characterMortal',
            fields=[
                ('characterbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.characterBase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.characterbase',),
        ),
        migrations.CreateModel(
            name='charmBase',
            fields=[
                ('effectbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.effectBase')),
                ('levelEssence', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Essence Level')),
                ('charmType', app.models.SingleChoiceField(blank=True, choices=[('Permanent', 'Permanent'), ('Simple', 'Simple'), ('Reflexive', 'Reflexive'), ('Suplemental', 'Suplemental')], max_length=100, verbose_name='Charm Type')),
                ('duration', app.models.SingleChoiceField(blank=True, choices=[('', ''), ('One Round', 'One Round'), ('One Scene', 'One Scene'), ('Indefinite', 'Indefinite')], max_length=100, verbose_name='Charm Duration')),
                ('keywords', app.models.MultiChoiceField(blank=True, choices=[('Charms', (('Advantage', 'Advantage'), ('Attack-Action', 'Attack-Action'), ('Counterattack', 'Counterattack'), ('Form', 'Form'), ('Group', 'Group'), ('Mute', 'Mute'), ('Perilous', 'Perilous'), ('Once Per Scene', 'Once Per Scene'), ('Once Per Day', 'Once Per Day'), ('Once Per Story', 'Once Per Story'), ('Once Per Season', 'Once Per Season'), ('Pilot', 'Pilot'), ('Post-Roll', 'Post-Roll'), ('Psyche', 'Psyche'), ('Quickshot', 'Quickshot'))), ('Evocations', (('Dissonant', 'Dissonant'), ('Resonant', 'Resonant')))], max_length=100, verbose_name='Charm Keywords')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.effectbase',),
        ),
        migrations.CreateModel(
            name='intimacyPrincipal',
            fields=[
                ('intimacybase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.intimacyBase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.intimacybase',),
        ),
        migrations.CreateModel(
            name='intimacyTie',
            fields=[
                ('intimacybase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.intimacyBase')),
                ('target', app.models.NamedCharField(max_length=100, verbose_name='Target')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.intimacybase',),
        ),
        migrations.CreateModel(
            name='item',
            fields=[
                ('itembase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.itemBase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.itembase',),
        ),
        migrations.CreateModel(
            name='itemArmor',
            fields=[
                ('itembase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.itemBase')),
                ('category', app.models.SingleChoiceField(blank=True, choices=[('Light', 'Light'), ('Medium', 'Medium'), ('Heavy', 'Heavy')], max_length=100, verbose_name='Category')),
                ('tags', app.models.MultiChoiceField(blank=True, choices=[('Buoyant', 'Buoyant'), ('Concealable', 'Concealable'), ('Silent', 'Silent')], max_length=100, verbose_name='Tags')),
                ('soak', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Soak')),
                ('hardness', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Hardness')),
                ('mobilityPenalty', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Mobility Penalty')),
                ('attunement', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Attunement')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.itembase',),
        ),
        migrations.CreateModel(
            name='itemWeaponBase',
            fields=[
                ('itembase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.itemBase')),
                ('category', app.models.SingleChoiceField(blank=True, choices=[('Light', 'Light'), ('Medium', 'Medium'), ('Heavy', 'Heavy')], max_length=100, verbose_name='Category')),
                ('tags', app.models.MultiChoiceField(blank=True, choices=[('General', (('One Handed', 'One Handed'), ('Two Handed', 'Two Handed'), ('Bashing', 'Bashing'), ('Concealable', 'Concealable'), ('Lethal', 'Lethal'), ('Mounted', 'Mounted'), ('Piercing', 'Piercing'), ('Special', 'Special'))), ('Melee', (('Melee', 'Melee'), ('Balanced', 'Balanced'), ('Brawl', 'Brawl'), ('Chopping', 'Chopping'), ('Disarming', 'Disarming'), ('Flexible', 'Flexible'), ('Improvised', 'Improvised'), ('Grappling', 'Grappling'), ('Martial Arts', 'Martial Arts'), ('Natural', 'Natural'), ('Reaching', 'Reaching'), ('Shield', 'Shield'), ('Smashing', 'Smashing'), ('Worn', 'Worn'))), ('Thrown', (('Occult', 'Occult'), ('Cutting', 'Cutting'), ('Poisonable', 'Poisonable'), ('Subtle', 'Subtle'))), ('Archery', (('Archery', 'Archery'), ('Crossbow', 'Crossbow'), ('Flame', 'Flame'), ('Powerful', 'Powerful'), ('Slow', 'Slow')))], max_length=100, verbose_name='Tags')),
                ('accuracy', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Accuracy')),
                ('damage', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Damage')),
                ('defense', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Defense')),
                ('overwhelming', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Overwhelming')),
                ('attunement', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Attunement')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.itembase',),
        ),
        migrations.CreateModel(
            name='merit',
            fields=[
                ('effectbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.effectBase')),
                ('dots', app.models.DotField(default=0, verbose_name='Dots')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.effectbase',),
        ),
        migrations.CreateModel(
            name='modifierAbility',
            fields=[
                ('modifierbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.modifierBase')),
                ('keyword', app.models.SingleChoiceField(blank=True, choices=[('War', (('Archery', 'Archery'), ('Athletics', 'Athletics'), ('Awareness', 'Awareness'), ('Brawl', 'Brawl'), ('Dodge', 'Dodge'), ('Integrity', 'Integrity'), ('Melee', 'Melee'), ('Resistance', 'Resistance'), ('Thrown', 'Thrown'), ('War', 'War'))), ('Life', (('Craft', 'Craft'), ('Larceny', 'Larceny'), ('Linguistics', 'Linguistics'), ('Performance', 'Performance'), ('Presence', 'Presence'), ('Ride', 'Ride'), ('Sail', 'Sail'), ('Socialise', 'Socialise'), ('Stealth', 'Stealth'), ('Survival', 'Survival'))), ('Wisdom', (('Bureaucracy', 'Bureaucracy'), ('Investigation', 'Investigation'), ('Lore', 'Lore'), ('Medicine', 'Medicine'), ('Occult', 'Occult')))], max_length=100, verbose_name='Ability')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.modifierbase',),
        ),
        migrations.CreateModel(
            name='modifierAttribute',
            fields=[
                ('modifierbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.modifierBase')),
                ('keyword', app.models.SingleChoiceField(blank=True, choices=[('Physical', (('Strength', 'Strength'), ('Dexterity', 'Dexterity'), ('Stamina', 'Stamina'))), ('Social', (('Charisma', 'Charisma'), ('Manipulation', 'Manipulation'), ('Appearance', 'Appearance'))), ('Mental', (('Perception', 'Perception'), ('Intelligence', 'Intelligence'), ('Wits', 'Wits')))], max_length=100, verbose_name='Attribute')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.modifierbase',),
        ),
        migrations.CreateModel(
            name='modifierStatic',
            fields=[
                ('modifierbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.modifierBase')),
                ('keyword', app.models.SingleChoiceField(blank=True, choices=[('Natural Soak', 'Natural Soak'), ('Armored Soak', 'Armored Soak'), ('Total Soak', 'Total Soak'), ('Hardness', 'Hardness'), ('Parry', 'Parry'), ('Evasion', 'Evasion'), ('Resolve', 'Resolve'), ('Guile', 'Guile'), ('Rush', 'Rush'), ('Disengage', 'Disengage'), ('Join Battle', 'Join Battle')], max_length=100, verbose_name='Static')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.modifierbase',),
        ),
        migrations.CreateModel(
            name='speciality',
            fields=[
                ('effectbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.effectBase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.effectbase',),
        ),
        migrations.CreateModel(
            name='rollConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', app.models.NameField(max_length=100, verbose_name='Name')),
                ('successesAuto', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Auto-Successes')),
                ('r01', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['NONE'], max_length=100, number=1, verbose_name='1s')),
                ('r02', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['NONE'], max_length=100, number=2, verbose_name='2s')),
                ('r03', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['NONE'], max_length=100, number=3, verbose_name='3s')),
                ('r04', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['NONE'], max_length=100, number=4, verbose_name='4s')),
                ('r05', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['NONE'], max_length=100, number=5, verbose_name='5s')),
                ('r06', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['NONE'], max_length=100, number=6, verbose_name='6s')),
                ('r07', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['SUCCESS'], max_length=100, number=7, verbose_name='7s')),
                ('r08', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['SUCCESS'], max_length=100, number=8, verbose_name='8s')),
                ('r09', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['SUCCESS'], max_length=100, number=9, verbose_name='9s')),
                ('r10', app.models.DieField(choices=[('None', 'None'), ('Success', 'Success'), ('Double', 'Double'), ('Exploding / Disappearing', 'Exploding / Disappearing'), ('Subtracting', 'Subtracting')], default=['SUCCESS', 'DOUBLE'], max_length=100, number=10, verbose_name='10s')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.rollconfiguration_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.AddField(
            model_name='effectbase',
            name='modifiers',
            field=app.models.NamedManyToManyField(blank=True, to='app.modifierBase', verbose_name='Modifiers'),
        ),
        migrations.AddField(
            model_name='effectbase',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_app.effectbase_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='effectbase',
            name='rollConfiguration',
            field=app.models.NamedManyToManyField(blank=True, to='app.rollConfiguration', verbose_name='Roll Configurations'),
        ),
        migrations.CreateModel(
            name='characterExaltLunar',
            fields=[
                ('characterexaltbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.characterExaltBase')),
                ('caste', app.models.SingleChoiceField(blank=True, choices=[('Full Moon', 'Full Moon'), ('Changing Moon', 'Changing Moon'), ('No Moon', 'No Moon'), ('Castless', 'Castless')], max_length=100, verbose_name='Lunar Caste')),
                ('spiritShape', models.CharField(max_length=100, verbose_name='Spirit Shape')),
                ('attributeFavored', app.models.MultiChoiceField(blank=True, choices=[('Physical', (('Strength', 'Strength'), ('Dexterity', 'Dexterity'), ('Stamina', 'Stamina'))), ('Social', (('Charisma', 'Charisma'), ('Manipulation', 'Manipulation'), ('Appearance', 'Appearance'))), ('Mental', (('Perception', 'Perception'), ('Intelligence', 'Intelligence'), ('Wits', 'Wits')))], max_length=100, verbose_name='Favoured Attributes')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.characterexaltbase',),
        ),
        migrations.CreateModel(
            name='characterExaltSolar',
            fields=[
                ('characterexaltbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.characterExaltBase')),
                ('caste', app.models.SingleChoiceField(blank=True, choices=[('Dawn', 'Dawn'), ('Zenith', 'Zenith'), ('Twilight', 'Twilight'), ('Night', 'Night'), ('Eclipse', 'Eclipse')], max_length=100, verbose_name='Solar Caste')),
                ('abilitySupernal', app.models.SingleChoiceField(blank=True, choices=[('War', (('Archery', 'Archery'), ('Athletics', 'Athletics'), ('Awareness', 'Awareness'), ('Brawl', 'Brawl'), ('Dodge', 'Dodge'), ('Integrity', 'Integrity'), ('Melee', 'Melee'), ('Resistance', 'Resistance'), ('Thrown', 'Thrown'), ('War', 'War'))), ('Life', (('Craft', 'Craft'), ('Larceny', 'Larceny'), ('Linguistics', 'Linguistics'), ('Performance', 'Performance'), ('Presence', 'Presence'), ('Ride', 'Ride'), ('Sail', 'Sail'), ('Socialise', 'Socialise'), ('Stealth', 'Stealth'), ('Survival', 'Survival'))), ('Wisdom', (('Bureaucracy', 'Bureaucracy'), ('Investigation', 'Investigation'), ('Lore', 'Lore'), ('Medicine', 'Medicine'), ('Occult', 'Occult')))], max_length=100, verbose_name='Supernal Ability')),
                ('abilityFavored', app.models.MultiChoiceField(blank=True, choices=[('War', (('Archery', 'Archery'), ('Athletics', 'Athletics'), ('Awareness', 'Awareness'), ('Brawl', 'Brawl'), ('Dodge', 'Dodge'), ('Integrity', 'Integrity'), ('Melee', 'Melee'), ('Resistance', 'Resistance'), ('Thrown', 'Thrown'), ('War', 'War'))), ('Life', (('Craft', 'Craft'), ('Larceny', 'Larceny'), ('Linguistics', 'Linguistics'), ('Performance', 'Performance'), ('Presence', 'Presence'), ('Ride', 'Ride'), ('Sail', 'Sail'), ('Socialise', 'Socialise'), ('Stealth', 'Stealth'), ('Survival', 'Survival'))), ('Wisdom', (('Bureaucracy', 'Bureaucracy'), ('Investigation', 'Investigation'), ('Lore', 'Lore'), ('Medicine', 'Medicine'), ('Occult', 'Occult')))], max_length=100, verbose_name='Favoured Abilities')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.characterexaltbase',),
        ),
        migrations.CreateModel(
            name='charmLunar',
            fields=[
                ('charmbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.charmBase')),
                ('levelKey', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Attribute Level')),
                ('key', app.models.SingleChoiceField(blank=True, choices=[('Physical', (('Strength', 'Strength'), ('Dexterity', 'Dexterity'), ('Stamina', 'Stamina'))), ('Social', (('Charisma', 'Charisma'), ('Manipulation', 'Manipulation'), ('Appearance', 'Appearance'))), ('Mental', (('Perception', 'Perception'), ('Intelligence', 'Intelligence'), ('Wits', 'Wits')))], max_length=100, verbose_name='Key Attribute')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.charmbase',),
        ),
        migrations.CreateModel(
            name='charmLunarShape',
            fields=[
                ('charmbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.charmBase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.charmbase',),
        ),
        migrations.CreateModel(
            name='charmMartialArt',
            fields=[
                ('charmbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.charmBase')),
                ('levelKey', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Martial Arts Level')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.charmbase',),
        ),
        migrations.CreateModel(
            name='charmSolar',
            fields=[
                ('charmbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.charmBase')),
                ('levelKey', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Ability Level')),
                ('key', app.models.SingleChoiceField(blank=True, choices=[('War', (('Archery', 'Archery'), ('Athletics', 'Athletics'), ('Awareness', 'Awareness'), ('Brawl', 'Brawl'), ('Dodge', 'Dodge'), ('Integrity', 'Integrity'), ('Melee', 'Melee'), ('Resistance', 'Resistance'), ('Thrown', 'Thrown'), ('War', 'War'))), ('Life', (('Craft', 'Craft'), ('Larceny', 'Larceny'), ('Linguistics', 'Linguistics'), ('Performance', 'Performance'), ('Presence', 'Presence'), ('Ride', 'Ride'), ('Sail', 'Sail'), ('Socialise', 'Socialise'), ('Stealth', 'Stealth'), ('Survival', 'Survival'))), ('Wisdom', (('Bureaucracy', 'Bureaucracy'), ('Investigation', 'Investigation'), ('Lore', 'Lore'), ('Medicine', 'Medicine'), ('Occult', 'Occult')))], max_length=100, verbose_name='Key Ability')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.charmbase',),
        ),
        migrations.CreateModel(
            name='itemWeaponMelee',
            fields=[
                ('itemweaponbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.itemWeaponBase')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.itemweaponbase',),
        ),
        migrations.CreateModel(
            name='itemWeaponRanged',
            fields=[
                ('itemweaponbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.itemWeaponBase')),
                ('rangeClose', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Close Range')),
                ('rangeShort', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Short Range')),
                ('rangeMedium', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Medium Range')),
                ('rangeLong', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Long Range')),
                ('rangeExtreme', app.models.NamedIntegerField(default=0, help_text=None, verbose_name='Extreme Range')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.itemweaponbase',),
        ),
        migrations.CreateModel(
            name='ownershipSpeciality',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipSpeciality_set', to='app.characterBase', verbose_name='Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipSpecialityTarget_set', to='app.speciality', verbose_name='Speciality')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipMerit',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipMerit_set', to='app.characterBase', verbose_name='Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipMeritTarget_set', to='app.merit', verbose_name='Merit')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipItemWeapon',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipItemWeapon_set', to='app.characterBase', verbose_name='Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipItemWeaponTarget_set', to='app.itemWeaponBase', verbose_name='Weapon')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipItemArmor',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipItemArmor_set', to='app.characterBase', verbose_name='Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipItemArmorTarget_set', to='app.itemArmor', verbose_name='Armor')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipItem',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipItem_set', to='app.characterBase', verbose_name='Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipItemTarget_set', to='app.item', verbose_name='Item')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipIntimacyTie',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipIntimacyTie_set', to='app.characterBase', verbose_name='Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipIntimacyTieTarget_set', to='app.intimacyTie', verbose_name='Tie')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipIntimacyPrincipal',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipIntimacyPrincipal_set', to='app.characterBase', verbose_name='Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipIntimacyPrincipalTarget_set', to='app.intimacyPrincipal', verbose_name='Principal')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipCharmMartialArt',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmMartialArt_set', to='app.characterExaltBase', verbose_name='Exalted Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmMartialArtTarget_set', to='app.characterExaltBase', verbose_name='Martial Arts Charm')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipCharmEvocation',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmEvocation_set', to='app.characterExaltBase', verbose_name='Exalted Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmEvocationTarget_set', to='app.characterExaltBase', verbose_name='Evocation')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipCharmSolar',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmSolar_set', to='app.characterExaltSolar', verbose_name='Solar Exalted Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmSolarTarget_set', to='app.characterExaltSolar', verbose_name='Solar Charm')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipCharmLunarShape',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmLunarShape_set', to='app.characterExaltLunar', verbose_name='Lunar Exalted Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmLunarShapeTarget_set', to='app.characterExaltLunar', verbose_name='Lunar Shape')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='ownershipCharmLunar',
            fields=[
                ('ownershipbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.ownershipBase')),
                ('owner', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmLunar_set', to='app.characterExaltLunar', verbose_name='Lunar Exalted Owner')),
                ('target', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ownershipCharmLunarTarget_set', to='app.characterExaltLunar', verbose_name='Lunar Charm')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.ownershipbase',),
        ),
        migrations.CreateModel(
            name='charmEvocation',
            fields=[
                ('charmbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='app.charmBase')),
                ('key', app.models.NamedForeignKeyField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.itemBase', verbose_name='Artifact')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('app.charmbase',),
        ),
    ]
